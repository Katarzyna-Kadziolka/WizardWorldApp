@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using WizardWorldApp.Data
@using WizardWorldApp.Data.Feedback
@using WizardWorldApp.Services
@inject WizardWorldClient _client

<div style="width: 800px;">
    <MudCard>
        <MudCardContent>
            <MudForm>
                <MudSelect T="string" Label="Message category" AnchorOrigin="Origin.BottomCenter"
                           @bind-Value="@_feedbackType" @bind-Value:event="ValueChanged">
                    <MudSelectItem Value="@(FeedbackType.Bug.ToString())"/>
                    <MudSelectItem Value="@(FeedbackType.DataError.ToString())"/>
                    <MudSelectItem Value="@(FeedbackType.General.ToString())"/>
                    <MudSelectItem Value="@(FeedbackType.Suggestion.ToString())"/>
                </MudSelect>
                <MudTextField @bind-Value="_feedback" Label="Your Message" Variant="Variant.Text" Lines="10" 
                              AdornmentColor="Color.Info" ></MudTextField>
            </MudForm>
        </MudCardContent>
        <MudCardActions>
            <MudButton Variant="Variant.Filled" @onclick="Send" Color="Color.Info" Class="ml-auto">Send</MudButton>
        </MudCardActions>
    </MudCard>
</div>
@code {
    private string _feedbackType = FeedbackType.General.ToString();
    private string _feedback { get; set; }

    private async void Send() {
        Enum.TryParse(_feedbackType, out FeedbackType feedbackType);
        var command = new FeedbackCommand {
            FeedbackType = feedbackType,
            Feedback = _feedback,
            EntityId = null
        };
        await _client.PostFeedbackAsync(command);
        _feedback = "";
    }
}